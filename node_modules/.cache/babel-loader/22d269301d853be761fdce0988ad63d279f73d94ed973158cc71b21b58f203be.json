{"ast":null,"code":"var _jsxFileName = \"/Users/harshikantdubey/Desktop/cultural education site/src/components/ThreeScene.js\",\n  _s = $RefreshSig$();\n// src/components/ThreeScene.js\nimport React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { Box3, Vector3 } from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeScene = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // === Basic Setup ===\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf0f0f0);\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n    const camera = new THREE.PerspectiveCamera(50, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 5); // initial camera position\n\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    renderer.setSize(width, height);\n    renderer.shadowMap.enabled = true;\n    mountRef.current.appendChild(renderer.domElement);\n\n    // === Lights ===\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.7);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 10, 7.5);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n\n    // === Orbit Controls ===\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n\n    // === Load Ashoka Chakra Model ===\n    const loader = new GLTFLoader();\n    let chakraModel = null;\n    loader.load(\"/models/scene.gltf\", gltf => {\n      chakraModel = gltf.scene;\n\n      // Compute bounding box\n      const box = new Box3().setFromObject(chakraModel);\n      const size = new Vector3();\n      box.getSize(size);\n\n      // Auto-scale model\n      const maxDim = Math.max(size.x, size.y, size.z);\n      const scale = 1 / maxDim; // largest dimension = 1 unit\n      chakraModel.scale.set(scale, scale, scale);\n\n      // Center model\n      const center = new Vector3();\n      box.getCenter(center);\n      chakraModel.position.sub(center);\n\n      // Optional rotation\n      chakraModel.rotation.x = Math.PI / 2;\n\n      // Adjust camera distance to fit model nicely\n      camera.position.set(0, 0, maxDim * 1.5);\n      camera.lookAt(0, 0, 0);\n      scene.add(chakraModel);\n    }, xhr => {\n      console.log(`Model ${xhr.total ? (xhr.loaded / xhr.total * 100).toFixed(2) : \"?\"}% loaded`);\n    }, error => {\n      console.error(\"Error loading GLTF:\", error);\n    });\n\n    // === Animation Loop ===\n    const animate = () => {\n      requestAnimationFrame(animate);\n      if (chakraModel) chakraModel.rotation.z += 0.01;\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // === Handle Resize ===\n    const handleResize = () => {\n      if (!mountRef.current) return;\n      const width = mountRef.current.clientWidth;\n      const height = mountRef.current.clientHeight;\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    };\n    window.addEventListener(\"resize\", handleResize);\n\n    // === Cleanup ===\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      mountRef.current.removeChild(renderer.domElement);\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 10\n  }, this);\n};\n_s(ThreeScene, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","GLTFLoader","OrbitControls","Box3","Vector3","jsxDEV","_jsxDEV","ThreeScene","_s","mountRef","current","scene","Scene","background","Color","width","clientWidth","height","clientHeight","camera","PerspectiveCamera","position","set","renderer","WebGLRenderer","antialias","alpha","setSize","shadowMap","enabled","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","castShadow","controls","enableDamping","dampingFactor","loader","chakraModel","load","gltf","box","setFromObject","size","getSize","maxDim","Math","max","x","y","z","scale","center","getCenter","sub","rotation","PI","lookAt","xhr","console","log","total","loaded","toFixed","error","animate","requestAnimationFrame","update","render","handleResize","aspect","updateProjectionMatrix","window","addEventListener","removeEventListener","removeChild","dispose","ref","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harshikantdubey/Desktop/cultural education site/src/components/ThreeScene.js"],"sourcesContent":["// src/components/ThreeScene.js\nimport React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { Box3, Vector3 } from \"three\";\n\nconst ThreeScene = () => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // === Basic Setup ===\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf0f0f0);\n\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n\n    const camera = new THREE.PerspectiveCamera(50, width / height, 0.1, 1000);\n    camera.position.set(0, 0, 5); // initial camera position\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    renderer.setSize(width, height);\n    renderer.shadowMap.enabled = true;\n    mountRef.current.appendChild(renderer.domElement);\n\n    // === Lights ===\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.7);\n    scene.add(ambientLight);\n\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 10, 7.5);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n\n    // === Orbit Controls ===\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n\n    // === Load Ashoka Chakra Model ===\n    const loader = new GLTFLoader();\n    let chakraModel = null;\n\n    loader.load(\n      \"/models/scene.gltf\",\n      (gltf) => {\n        chakraModel = gltf.scene;\n\n        // Compute bounding box\n        const box = new Box3().setFromObject(chakraModel);\n        const size = new Vector3();\n        box.getSize(size);\n\n        // Auto-scale model\n        const maxDim = Math.max(size.x, size.y, size.z);\n        const scale = 1 / maxDim; // largest dimension = 1 unit\n        chakraModel.scale.set(scale, scale, scale);\n\n        // Center model\n        const center = new Vector3();\n        box.getCenter(center);\n        chakraModel.position.sub(center);\n\n        // Optional rotation\n        chakraModel.rotation.x = Math.PI / 2;\n\n        // Adjust camera distance to fit model nicely\n        camera.position.set(0, 0, maxDim * 1.5);\n        camera.lookAt(0, 0, 0);\n\n        scene.add(chakraModel);\n      },\n      (xhr) => {\n        console.log(\n          `Model ${xhr.total ? ((xhr.loaded / xhr.total) * 100).toFixed(2) : \"?\"}% loaded`\n        );\n      },\n      (error) => {\n        console.error(\"Error loading GLTF:\", error);\n      }\n    );\n\n    // === Animation Loop ===\n    const animate = () => {\n      requestAnimationFrame(animate);\n      if (chakraModel) chakraModel.rotation.z += 0.01;\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // === Handle Resize ===\n    const handleResize = () => {\n      if (!mountRef.current) return;\n      const width = mountRef.current.clientWidth;\n      const height = mountRef.current.clientHeight;\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    };\n    window.addEventListener(\"resize\", handleResize);\n\n    // === Cleanup ===\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      mountRef.current.removeChild(renderer.domElement);\n      renderer.dispose();\n    };\n  }, []);\n\n  return <div ref={mountRef} style={{ width: \"100%\", height: \"100%\" }} />;\n};\n\nexport default ThreeScene;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,uCAAuC;AAClE,SAASC,aAAa,QAAQ,2CAA2C;AACzE,SAASC,IAAI,EAAEC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACW,QAAQ,CAACC,OAAO,EAAE;;IAEvB;IACA,MAAMC,KAAK,GAAG,IAAIX,KAAK,CAACY,KAAK,CAAC,CAAC;IAC/BD,KAAK,CAACE,UAAU,GAAG,IAAIb,KAAK,CAACc,KAAK,CAAC,QAAQ,CAAC;IAE5C,MAAMC,KAAK,GAAGN,QAAQ,CAACC,OAAO,CAACM,WAAW;IAC1C,MAAMC,MAAM,GAAGR,QAAQ,CAACC,OAAO,CAACQ,YAAY;IAE5C,MAAMC,MAAM,GAAG,IAAInB,KAAK,CAACoB,iBAAiB,CAAC,EAAE,EAAEL,KAAK,GAAGE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC;IACzEE,MAAM,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;IAE9B,MAAMC,QAAQ,GAAG,IAAIvB,KAAK,CAACwB,aAAa,CAAC;MAAEC,SAAS,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IAC1EH,QAAQ,CAACI,OAAO,CAACZ,KAAK,EAAEE,MAAM,CAAC;IAC/BM,QAAQ,CAACK,SAAS,CAACC,OAAO,GAAG,IAAI;IACjCpB,QAAQ,CAACC,OAAO,CAACoB,WAAW,CAACP,QAAQ,CAACQ,UAAU,CAAC;;IAEjD;IACA,MAAMC,YAAY,GAAG,IAAIhC,KAAK,CAACiC,YAAY,CAAC,QAAQ,EAAE,GAAG,CAAC;IAC1DtB,KAAK,CAACuB,GAAG,CAACF,YAAY,CAAC;IAEvB,MAAMG,gBAAgB,GAAG,IAAInC,KAAK,CAACoC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC;IAChED,gBAAgB,CAACd,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC;IACzCa,gBAAgB,CAACE,UAAU,GAAG,IAAI;IAClC1B,KAAK,CAACuB,GAAG,CAACC,gBAAgB,CAAC;;IAE3B;IACA,MAAMG,QAAQ,GAAG,IAAIpC,aAAa,CAACiB,MAAM,EAAEI,QAAQ,CAACQ,UAAU,CAAC;IAC/DO,QAAQ,CAACC,aAAa,GAAG,IAAI;IAC7BD,QAAQ,CAACE,aAAa,GAAG,IAAI;;IAE7B;IACA,MAAMC,MAAM,GAAG,IAAIxC,UAAU,CAAC,CAAC;IAC/B,IAAIyC,WAAW,GAAG,IAAI;IAEtBD,MAAM,CAACE,IAAI,CACT,oBAAoB,EACnBC,IAAI,IAAK;MACRF,WAAW,GAAGE,IAAI,CAACjC,KAAK;;MAExB;MACA,MAAMkC,GAAG,GAAG,IAAI1C,IAAI,CAAC,CAAC,CAAC2C,aAAa,CAACJ,WAAW,CAAC;MACjD,MAAMK,IAAI,GAAG,IAAI3C,OAAO,CAAC,CAAC;MAC1ByC,GAAG,CAACG,OAAO,CAACD,IAAI,CAAC;;MAEjB;MACA,MAAME,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACJ,IAAI,CAACK,CAAC,EAAEL,IAAI,CAACM,CAAC,EAAEN,IAAI,CAACO,CAAC,CAAC;MAC/C,MAAMC,KAAK,GAAG,CAAC,GAAGN,MAAM,CAAC,CAAC;MAC1BP,WAAW,CAACa,KAAK,CAACjC,GAAG,CAACiC,KAAK,EAAEA,KAAK,EAAEA,KAAK,CAAC;;MAE1C;MACA,MAAMC,MAAM,GAAG,IAAIpD,OAAO,CAAC,CAAC;MAC5ByC,GAAG,CAACY,SAAS,CAACD,MAAM,CAAC;MACrBd,WAAW,CAACrB,QAAQ,CAACqC,GAAG,CAACF,MAAM,CAAC;;MAEhC;MACAd,WAAW,CAACiB,QAAQ,CAACP,CAAC,GAAGF,IAAI,CAACU,EAAE,GAAG,CAAC;;MAEpC;MACAzC,MAAM,CAACE,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE2B,MAAM,GAAG,GAAG,CAAC;MACvC9B,MAAM,CAAC0C,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAEtBlD,KAAK,CAACuB,GAAG,CAACQ,WAAW,CAAC;IACxB,CAAC,EACAoB,GAAG,IAAK;MACPC,OAAO,CAACC,GAAG,CACT,SAASF,GAAG,CAACG,KAAK,GAAG,CAAEH,GAAG,CAACI,MAAM,GAAGJ,GAAG,CAACG,KAAK,GAAI,GAAG,EAAEE,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,UACxE,CAAC;IACH,CAAC,EACAC,KAAK,IAAK;MACTL,OAAO,CAACK,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CACF,CAAC;;IAED;IACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;MAC9B,IAAI3B,WAAW,EAAEA,WAAW,CAACiB,QAAQ,CAACL,CAAC,IAAI,IAAI;MAC/ChB,QAAQ,CAACiC,MAAM,CAAC,CAAC;MACjBhD,QAAQ,CAACiD,MAAM,CAAC7D,KAAK,EAAEQ,MAAM,CAAC;IAChC,CAAC;IACDkD,OAAO,CAAC,CAAC;;IAET;IACA,MAAMI,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAI,CAAChE,QAAQ,CAACC,OAAO,EAAE;MACvB,MAAMK,KAAK,GAAGN,QAAQ,CAACC,OAAO,CAACM,WAAW;MAC1C,MAAMC,MAAM,GAAGR,QAAQ,CAACC,OAAO,CAACQ,YAAY;MAC5CC,MAAM,CAACuD,MAAM,GAAG3D,KAAK,GAAGE,MAAM;MAC9BE,MAAM,CAACwD,sBAAsB,CAAC,CAAC;MAC/BpD,QAAQ,CAACI,OAAO,CAACZ,KAAK,EAAEE,MAAM,CAAC;IACjC,CAAC;IACD2D,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;;IAE/C;IACA,OAAO,MAAM;MACXG,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEL,YAAY,CAAC;MAClDhE,QAAQ,CAACC,OAAO,CAACqE,WAAW,CAACxD,QAAQ,CAACQ,UAAU,CAAC;MACjDR,QAAQ,CAACyD,OAAO,CAAC,CAAC;IACpB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO1E,OAAA;IAAK2E,GAAG,EAAExE,QAAS;IAACyE,KAAK,EAAE;MAAEnE,KAAK,EAAE,MAAM;MAAEE,MAAM,EAAE;IAAO;EAAE;IAAAkE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzE,CAAC;AAAC9E,EAAA,CA3GID,UAAU;AAAAgF,EAAA,GAAVhF,UAAU;AA6GhB,eAAeA,UAAU;AAAC,IAAAgF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}