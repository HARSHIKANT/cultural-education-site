{"ast":null,"code":"var _jsxFileName = \"/Users/harshikantdubey/Desktop/cultural education site/src/components/ThreeScene.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeScene = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    console.log('ThreeScene: Initializing...');\n\n    // Create Scene\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xBBBBBB);\n\n    // Get container dimensions\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n    console.log('ThreeScene: Container dimensions:', {\n      width,\n      height\n    });\n\n    // Create Camera\n    const camera = new THREE.PerspectiveCamera(75,\n    // Field of view\n    width / height,\n    // Aspect ratio\n    0.1,\n    // Near clipping plane\n    1000 // Far clipping plane\n    );\n    camera.position.set(0, 0, 5); // Position camera\n\n    // Create Renderer\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Add Lighting\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 5, 5);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\n    scene.add(ambientLight);\n\n    // Add hemisphere light for better illumination\n    const hemisphereLight = new THREE.HemisphereLight(0xffffbb, 0x080820, 0.5);\n    scene.add(hemisphereLight);\n\n    // Load GLTF Model\n    const loader = new GLTFLoader();\n    let modelRef = null;\n    loader.load('/models/scene.gltf', gltf => {\n      const model = gltf.scene;\n\n      // Calculate bounding box and center the model\n      const box = new THREE.Box3().setFromObject(model);\n      const center = box.getCenter(new THREE.Vector3());\n      const size = box.getSize(new THREE.Vector3());\n\n      // Center the model\n      model.position.sub(center);\n\n      // Apply fixed scale\n      model.scale.setScalar(0.00125);\n      console.log('Applied fixed scale: 0.00125');\n\n      // Keep model centered\n      model.position.set(0, 0, 0);\n      scene.add(model);\n      modelRef = model; // Set reference for mouse tilting\n      console.log('Model loaded successfully!', {\n        size,\n        center\n      });\n    }, progress => {\n      console.log('Loading progress:', progress.loaded / progress.total * 100 + '%');\n    }, error => {\n      console.error('Error loading model:', error);\n    });\n\n    // Mouse tracking for tilting\n    let mouseX = 0;\n    let mouseY = 0;\n    const handleMouseMove = event => {\n      // Get mouse position relative to the container\n      const rect = mountRef.current.getBoundingClientRect();\n      mouseX = (event.clientX - rect.left - rect.width / 2) / (rect.width / 2); // -1 to 1\n      mouseY = -(event.clientY - rect.top - rect.height / 2) / (rect.height / 2); // -1 to 1\n\n      // Apply subtle tilting based on mouse position\n      if (modelRef) {\n        const tiltX = mouseY * 0.5; // Tilt around X axis based on mouse Y\n        const tiltY = mouseX * 0.5; // Tilt around Y axis based on mouse X\n\n        modelRef.rotation.x = tiltX;\n        modelRef.rotation.y = tiltY;\n      }\n    };\n\n    // Attach mouse event to the container div\n    if (mountRef.current) {\n      mountRef.current.addEventListener('mousemove', handleMouseMove);\n    }\n\n    // Animation Loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      const newWidth = mountRef.current.clientWidth;\n      const newHeight = mountRef.current.clientHeight;\n      camera.aspect = newWidth / newHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(newWidth, newHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup on component unmount\n    return () => {\n      var _mountRef$current;\n      window.removeEventListener('resize', handleResize);\n      if (mountRef.current) {\n        mountRef.current.removeEventListener('mousemove', handleMouseMove);\n      }\n      (_mountRef$current = mountRef.current) === null || _mountRef$current === void 0 ? void 0 : _mountRef$current.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100%',\n      height: '100%',\n      borderRadius: '15px',\n      overflow: 'hidden'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreeScene, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","GLTFLoader","jsxDEV","_jsxDEV","ThreeScene","_s","mountRef","console","log","scene","Scene","background","Color","width","current","clientWidth","height","clientHeight","camera","PerspectiveCamera","position","set","renderer","WebGLRenderer","antialias","setSize","setPixelRatio","window","devicePixelRatio","appendChild","domElement","directionalLight","DirectionalLight","castShadow","add","ambientLight","AmbientLight","hemisphereLight","HemisphereLight","loader","modelRef","load","gltf","model","box","Box3","setFromObject","center","getCenter","Vector3","size","getSize","sub","scale","setScalar","progress","loaded","total","error","mouseX","mouseY","handleMouseMove","event","rect","getBoundingClientRect","clientX","left","clientY","top","tiltX","tiltY","rotation","x","y","addEventListener","animate","requestAnimationFrame","render","handleResize","newWidth","newHeight","aspect","updateProjectionMatrix","_mountRef$current","removeEventListener","removeChild","ref","style","borderRadius","overflow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harshikantdubey/Desktop/cultural education site/src/components/ThreeScene.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n\nconst ThreeScene = () => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    console.log('ThreeScene: Initializing...');\n    \n    // Create Scene\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xBBBBBB);\n\n    // Get container dimensions\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n    console.log('ThreeScene: Container dimensions:', { width, height });\n\n    // Create Camera\n    const camera = new THREE.PerspectiveCamera(\n      75,           // Field of view\n      width / height, // Aspect ratio\n      0.1,          // Near clipping plane\n      1000          // Far clipping plane\n    );\n    camera.position.set(0, 0, 5); // Position camera\n\n    // Create Renderer\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Add Lighting\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 5, 5);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\n    scene.add(ambientLight);\n\n    // Add hemisphere light for better illumination\n    const hemisphereLight = new THREE.HemisphereLight(0xffffbb, 0x080820, 0.5);\n    scene.add(hemisphereLight);\n\n    // Load GLTF Model\n    const loader = new GLTFLoader();\n    let modelRef = null;\n\n    loader.load(\n      '/models/scene.gltf',\n      (gltf) => {\n        const model = gltf.scene;\n        \n        // Calculate bounding box and center the model\n        const box = new THREE.Box3().setFromObject(model);\n        const center = box.getCenter(new THREE.Vector3());\n        const size = box.getSize(new THREE.Vector3());\n        \n        // Center the model\n        model.position.sub(center);\n        \n        // Apply fixed scale\n        model.scale.setScalar(0.00125);\n        console.log('Applied fixed scale: 0.00125');\n        \n        // Keep model centered\n        model.position.set(0, 0, 0);\n        scene.add(model);\n        modelRef = model; // Set reference for mouse tilting\n        console.log('Model loaded successfully!', { size, center });\n      },\n      (progress) => {\n        console.log('Loading progress:', (progress.loaded / progress.total) * 100 + '%');\n      },\n      (error) => {\n        console.error('Error loading model:', error);\n      }\n    );\n\n    // Mouse tracking for tilting\n    let mouseX = 0;\n    let mouseY = 0;\n\n    const handleMouseMove = (event) => {\n      // Get mouse position relative to the container\n      const rect = mountRef.current.getBoundingClientRect();\n      mouseX = (event.clientX - rect.left - rect.width / 2) / (rect.width / 2); // -1 to 1\n      mouseY = -(event.clientY - rect.top - rect.height / 2) / (rect.height / 2); // -1 to 1\n      \n      // Apply subtle tilting based on mouse position\n      if (modelRef) {\n        const tiltX = mouseY * 0.5; // Tilt around X axis based on mouse Y\n        const tiltY = mouseX * 0.5; // Tilt around Y axis based on mouse X\n        \n        modelRef.rotation.x = tiltX;\n        modelRef.rotation.y = tiltY;\n      }\n    };\n\n    // Attach mouse event to the container div\n    if (mountRef.current) {\n      mountRef.current.addEventListener('mousemove', handleMouseMove);\n    }\n\n    // Animation Loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      const newWidth = mountRef.current.clientWidth;\n      const newHeight = mountRef.current.clientHeight;\n\n      camera.aspect = newWidth / newHeight;\n      camera.updateProjectionMatrix();\n\n      renderer.setSize(newWidth, newHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup on component unmount\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (mountRef.current) {\n        mountRef.current.removeEventListener('mousemove', handleMouseMove);\n      }\n      mountRef.current?.removeChild(renderer.domElement);\n    };\n  }, []);\n\n  return (\n    <div\n      ref={mountRef}\n      style={{\n        width: '100%',\n        height: '100%',\n        borderRadius: '15px',\n        overflow: 'hidden',\n      }}\n    />\n  );\n};\n\nexport default ThreeScene;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}