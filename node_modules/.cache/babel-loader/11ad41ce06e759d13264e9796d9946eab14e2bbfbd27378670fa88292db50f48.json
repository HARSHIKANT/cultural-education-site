{"ast":null,"code":"var _jsxFileName = \"/Users/harshikantdubey/Desktop/cultural education site/src/components/ThreeScene.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeScene = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    // Create Scene\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf5f5f5);\n\n    // Get container dimensions\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n\n    // Create Camera\n    const camera = new THREE.PerspectiveCamera(75,\n    // Field of view\n    width / height,\n    // Aspect ratio\n    0.1,\n    // Near clipping plane\n    1000 // Far clipping plane\n    );\n    camera.position.set(0, 0, 5); // Position camera\n\n    // Create Renderer\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Add Lighting\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 5, 5);\n    scene.add(directionalLight);\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n\n    // Load GLTF Model\n    const loader = new GLTFLoader();\n    let model;\n    loader.load('/models/scene.gltf', gltf => {\n      model = gltf.scene;\n\n      // Calculate bounding box and center the model\n      const box = new THREE.Box3().setFromObject(model);\n      const center = box.getCenter(new THREE.Vector3());\n      const size = box.getSize(new THREE.Vector3());\n\n      // Center the model\n      model.position.sub(center);\n\n      // Scale the model to fit in the camera view\n      const maxDimension = Math.max(size.x, size.y, size.z);\n      const scale = 2 / maxDimension; // Scale to fit within 2 units\n      model.scale.setScalar(scale);\n      scene.add(model);\n      console.log('Model loaded successfully!', {\n        size,\n        center,\n        scale\n      });\n\n      // Adjust camera position based on model size\n      const distance = maxDimension * 2;\n      camera.position.set(distance, distance, distance);\n      camera.lookAt(0, 0, 0);\n    }, progress => {\n      console.log('Loading progress:', progress.loaded / progress.total * 100 + '%');\n    }, error => {\n      console.error('Error loading model:', error);\n    });\n\n    // Animation Loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // Rotate model slowly\n      if (model) {\n        model.rotation.y += 0.005;\n      }\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      const newWidth = mountRef.current.clientWidth;\n      const newHeight = mountRef.current.clientHeight;\n      camera.aspect = newWidth / newHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(newWidth, newHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup on component unmount\n    return () => {\n      var _mountRef$current;\n      window.removeEventListener('resize', handleResize);\n      (_mountRef$current = mountRef.current) === null || _mountRef$current === void 0 ? void 0 : _mountRef$current.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100%',\n      height: '100%',\n      borderRadius: '15px',\n      overflow: 'hidden'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreeScene, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","GLTFLoader","jsxDEV","_jsxDEV","ThreeScene","_s","mountRef","scene","Scene","background","Color","width","current","clientWidth","height","clientHeight","camera","PerspectiveCamera","position","set","renderer","WebGLRenderer","antialias","setSize","setPixelRatio","window","devicePixelRatio","appendChild","domElement","directionalLight","DirectionalLight","add","ambientLight","AmbientLight","loader","model","load","gltf","box","Box3","setFromObject","center","getCenter","Vector3","size","getSize","sub","maxDimension","Math","max","x","y","z","scale","setScalar","console","log","distance","lookAt","progress","loaded","total","error","animate","requestAnimationFrame","rotation","render","handleResize","newWidth","newHeight","aspect","updateProjectionMatrix","addEventListener","_mountRef$current","removeEventListener","removeChild","ref","style","borderRadius","overflow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harshikantdubey/Desktop/cultural education site/src/components/ThreeScene.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n\nconst ThreeScene = () => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    // Create Scene\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf5f5f5);\n\n    // Get container dimensions\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n\n    // Create Camera\n    const camera = new THREE.PerspectiveCamera(\n      75,           // Field of view\n      width / height, // Aspect ratio\n      0.1,          // Near clipping plane\n      1000          // Far clipping plane\n    );\n    camera.position.set(0, 0, 5); // Position camera\n\n    // Create Renderer\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Add Lighting\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 5, 5);\n    scene.add(directionalLight);\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n\n    // Load GLTF Model\n    const loader = new GLTFLoader();\n    let model;\n\n    loader.load(\n      '/models/scene.gltf',\n      (gltf) => {\n        model = gltf.scene;\n        \n        // Calculate bounding box and center the model\n        const box = new THREE.Box3().setFromObject(model);\n        const center = box.getCenter(new THREE.Vector3());\n        const size = box.getSize(new THREE.Vector3());\n        \n        // Center the model\n        model.position.sub(center);\n        \n        // Scale the model to fit in the camera view\n        const maxDimension = Math.max(size.x, size.y, size.z);\n        const scale = 2 / maxDimension; // Scale to fit within 2 units\n        model.scale.setScalar(scale);\n        \n        scene.add(model);\n        console.log('Model loaded successfully!', { size, center, scale });\n        \n        // Adjust camera position based on model size\n        const distance = maxDimension * 2;\n        camera.position.set(distance, distance, distance);\n        camera.lookAt(0, 0, 0);\n      },\n      (progress) => {\n        console.log('Loading progress:', (progress.loaded / progress.total) * 100 + '%');\n      },\n      (error) => {\n        console.error('Error loading model:', error);\n      }\n    );\n\n    // Animation Loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // Rotate model slowly\n      if (model) {\n        model.rotation.y += 0.005;\n      }\n\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      const newWidth = mountRef.current.clientWidth;\n      const newHeight = mountRef.current.clientHeight;\n\n      camera.aspect = newWidth / newHeight;\n      camera.updateProjectionMatrix();\n\n      renderer.setSize(newWidth, newHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup on component unmount\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      mountRef.current?.removeChild(renderer.domElement);\n    };\n  }, []);\n\n  return (\n    <div\n      ref={mountRef}\n      style={{\n        width: '100%',\n        height: '100%',\n        borderRadius: '15px',\n        overflow: 'hidden',\n      }}\n    />\n  );\n};\n\nexport default ThreeScene;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}