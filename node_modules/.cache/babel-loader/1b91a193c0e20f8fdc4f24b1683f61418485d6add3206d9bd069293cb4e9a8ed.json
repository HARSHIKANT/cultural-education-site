{"ast":null,"code":"var _jsxFileName = \"/Users/harshikantdubey/Desktop/cultural education site/src/components/ThreeScene.js\",\n  _s = $RefreshSig$();\n// src/components/ThreeScene.js\nimport React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { Box3, Vector3 } from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeScene = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    // === Basic Setup ===\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf0f0f0);\n    const camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 2, 5);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    mountRef.current.appendChild(renderer.domElement);\n\n    // === Lights ===\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.7);\n    scene.add(ambientLight);\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 10, 7.5);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n\n    // === Orbit Controls ===\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n\n    // === Load Ashoka Chakra Model ===\n    const loader = new GLTFLoader();\n    let chakraModel = null;\n    loader.load(\"/models/scene.gltf\", gltf => {\n      chakraModel = gltf.scene;\n\n      // 1️⃣ Compute bounding box\n      const box = new Box3().setFromObject(chakraModel);\n      const size = new Vector3();\n      box.getSize(size);\n\n      // 2️⃣ Auto-scale the model\n      const maxDim = Math.max(size.x, size.y, size.z);\n      const scale = 1 / maxDim; // largest dimension = 1 unit\n      chakraModel.scale.set(scale, scale, scale);\n\n      // 3️⃣ Center model at origin\n      const center = new Vector3();\n      box.getCenter(center);\n      chakraModel.position.sub(center);\n\n      // 4️⃣ Optional rotation\n      chakraModel.rotation.x = Math.PI / 2;\n      scene.add(chakraModel);\n    }, xhr => {\n      console.log(`Model ${(xhr.loaded / xhr.total * 100).toFixed(2)}% loaded`);\n    }, error => {\n      console.error(\"Error loading GLTF:\", error);\n    });\n\n    // === Animation Loop ===\n    const animate = () => {\n      requestAnimationFrame(animate);\n      if (chakraModel) chakraModel.rotation.z += 0.01;\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // === Handle Resize ===\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener(\"resize\", handleResize);\n\n    // === Cleanup ===\n    return () => {\n      mountRef.current.removeChild(renderer.domElement);\n      window.removeEventListener(\"resize\", handleResize);\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 10\n  }, this);\n};\n_s(ThreeScene, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","GLTFLoader","OrbitControls","Box3","Vector3","jsxDEV","_jsxDEV","ThreeScene","_s","mountRef","scene","Scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","antialias","setSize","shadowMap","enabled","current","appendChild","domElement","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","castShadow","controls","enableDamping","dampingFactor","loader","chakraModel","load","gltf","box","setFromObject","size","getSize","maxDim","Math","max","x","y","z","scale","center","getCenter","sub","rotation","PI","xhr","console","log","loaded","total","toFixed","error","animate","requestAnimationFrame","update","render","handleResize","aspect","updateProjectionMatrix","addEventListener","removeChild","removeEventListener","dispose","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harshikantdubey/Desktop/cultural education site/src/components/ThreeScene.js"],"sourcesContent":["// src/components/ThreeScene.js\nimport React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { Box3, Vector3 } from \"three\";\n\nconst ThreeScene = () => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    // === Basic Setup ===\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf0f0f0);\n\n    const camera = new THREE.PerspectiveCamera(\n      50,\n      window.innerWidth / window.innerHeight,\n      0.1,\n      1000\n    );\n    camera.position.set(0, 2, 5);\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    mountRef.current.appendChild(renderer.domElement);\n\n    // === Lights ===\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.7);\n    scene.add(ambientLight);\n\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 10, 7.5);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n\n    // === Orbit Controls ===\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n    controls.dampingFactor = 0.05;\n\n    // === Load Ashoka Chakra Model ===\n    const loader = new GLTFLoader();\n    let chakraModel = null;\n\n    loader.load(\n      \"/models/scene.gltf\",\n      (gltf) => {\n        chakraModel = gltf.scene;\n\n        // 1️⃣ Compute bounding box\n        const box = new Box3().setFromObject(chakraModel);\n        const size = new Vector3();\n        box.getSize(size);\n\n        // 2️⃣ Auto-scale the model\n        const maxDim = Math.max(size.x, size.y, size.z);\n        const scale = 1 / maxDim; // largest dimension = 1 unit\n        chakraModel.scale.set(scale, scale, scale);\n\n        // 3️⃣ Center model at origin\n        const center = new Vector3();\n        box.getCenter(center);\n        chakraModel.position.sub(center);\n\n        // 4️⃣ Optional rotation\n        chakraModel.rotation.x = Math.PI / 2;\n\n        scene.add(chakraModel);\n      },\n      (xhr) => {\n        console.log(`Model ${(xhr.loaded / xhr.total * 100).toFixed(2)}% loaded`);\n      },\n      (error) => {\n        console.error(\"Error loading GLTF:\", error);\n      }\n    );\n\n    // === Animation Loop ===\n    const animate = () => {\n      requestAnimationFrame(animate);\n      if (chakraModel) chakraModel.rotation.z += 0.01;\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // === Handle Resize ===\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener(\"resize\", handleResize);\n\n    // === Cleanup ===\n    return () => {\n      mountRef.current.removeChild(renderer.domElement);\n      window.removeEventListener(\"resize\", handleResize);\n      renderer.dispose();\n    };\n  }, []);\n\n  return <div ref={mountRef} style={{ width: \"100%\", height: \"100%\" }} />;\n};\n\nexport default ThreeScene;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}