{"ast":null,"code":"var _jsxFileName = \"/Users/harshikantdubey/Desktop/cultural education site/src/components/ThreeScene.js\",\n  _s = $RefreshSig$();\n// src/components/ThreeScene.js\nimport React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeScene = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    const mount = mountRef.current;\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n\n    // === Scene and Renderer ===\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf0f0f0);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    renderer.setSize(width, height);\n    renderer.outputColorSpace = THREE.SRGBColorSpace;\n    mount.appendChild(renderer.domElement);\n\n    // === Camera ===\n    const camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 100);\n    camera.position.set(0, 0, 3);\n\n    // === Lights ===\n    const ambient = new THREE.AmbientLight(0xffffff, 1);\n    scene.add(ambient);\n    const directional = new THREE.DirectionalLight(0xffffff, 1);\n    directional.position.set(3, 5, 5);\n    scene.add(directional);\n\n    // === Controls ===\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n\n    // === Load Model ===\n    const loader = new GLTFLoader();\n    let chakraModel = null;\n    loader.load(process.env.PUBLIC_URL + \"/models/scene.gltf\", gltf => {\n      chakraModel = gltf.scene;\n\n      // Compute bounding box\n      const box = new THREE.Box3().setFromObject(chakraModel);\n      const size = new THREE.Vector3();\n      box.getSize(size);\n      const center = new THREE.Vector3();\n      box.getCenter(center);\n\n      // Normalize scale\n      const maxDim = Math.max(size.x, size.y, size.z);\n      const scale = 1.5 / maxDim; // make slightly larger\n      chakraModel.scale.setScalar(scale);\n\n      // Center the model\n      chakraModel.position.sub(center.multiplyScalar(scale));\n\n      // Rotate slightly to face camera\n      chakraModel.rotation.x = Math.PI / 2;\n      scene.add(chakraModel);\n\n      // Adjust camera so model fits nicely\n      const fitDistance = maxDim / (2 * Math.tan(Math.PI * camera.fov / 360));\n      camera.position.z = fitDistance * 1.5;\n      camera.lookAt(0, 0, 0);\n    }, () => console.log(\"Model loading...\"), error => console.error(\"GLTF load error:\", error));\n\n    // === Animation Loop ===\n    const animate = () => {\n      requestAnimationFrame(animate);\n      if (chakraModel) chakraModel.rotation.z += 0.01;\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // === Handle Resize ===\n    const handleResize = () => {\n      const width = mount.clientWidth;\n      const height = mount.clientHeight;\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    };\n    window.addEventListener(\"resize\", handleResize);\n\n    // === Cleanup ===\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      mount.removeChild(renderer.domElement);\n      renderer.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      position: \"relative\",\n      overflow: \"hidden\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreeScene, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","GLTFLoader","OrbitControls","jsxDEV","_jsxDEV","ThreeScene","_s","mountRef","mount","current","width","clientWidth","height","clientHeight","scene","Scene","background","Color","renderer","WebGLRenderer","antialias","alpha","setSize","outputColorSpace","SRGBColorSpace","appendChild","domElement","camera","PerspectiveCamera","position","set","ambient","AmbientLight","add","directional","DirectionalLight","controls","enableDamping","loader","chakraModel","load","process","env","PUBLIC_URL","gltf","box","Box3","setFromObject","size","Vector3","getSize","center","getCenter","maxDim","Math","max","x","y","z","scale","setScalar","sub","multiplyScalar","rotation","PI","fitDistance","tan","fov","lookAt","console","log","error","animate","requestAnimationFrame","update","render","handleResize","aspect","updateProjectionMatrix","window","addEventListener","removeEventListener","removeChild","dispose","ref","style","overflow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harshikantdubey/Desktop/cultural education site/src/components/ThreeScene.js"],"sourcesContent":["// src/components/ThreeScene.js\nimport React, { useEffect, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nconst ThreeScene = () => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    const mount = mountRef.current;\n    const width = mount.clientWidth;\n    const height = mount.clientHeight;\n\n    // === Scene and Renderer ===\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf0f0f0);\n\n    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    renderer.setSize(width, height);\n    renderer.outputColorSpace = THREE.SRGBColorSpace;\n    mount.appendChild(renderer.domElement);\n\n    // === Camera ===\n    const camera = new THREE.PerspectiveCamera(45, width / height, 0.1, 100);\n    camera.position.set(0, 0, 3);\n\n    // === Lights ===\n    const ambient = new THREE.AmbientLight(0xffffff, 1);\n    scene.add(ambient);\n\n    const directional = new THREE.DirectionalLight(0xffffff, 1);\n    directional.position.set(3, 5, 5);\n    scene.add(directional);\n\n    // === Controls ===\n    const controls = new OrbitControls(camera, renderer.domElement);\n    controls.enableDamping = true;\n\n    // === Load Model ===\n    const loader = new GLTFLoader();\n    let chakraModel = null;\n\n    loader.load(\n      process.env.PUBLIC_URL + \"/models/scene.gltf\",\n      (gltf) => {\n        chakraModel = gltf.scene;\n\n        // Compute bounding box\n        const box = new THREE.Box3().setFromObject(chakraModel);\n        const size = new THREE.Vector3();\n        box.getSize(size);\n        const center = new THREE.Vector3();\n        box.getCenter(center);\n\n        // Normalize scale\n        const maxDim = Math.max(size.x, size.y, size.z);\n        const scale = 1.5 / maxDim; // make slightly larger\n        chakraModel.scale.setScalar(scale);\n\n        // Center the model\n        chakraModel.position.sub(center.multiplyScalar(scale));\n\n        // Rotate slightly to face camera\n        chakraModel.rotation.x = Math.PI / 2;\n\n        scene.add(chakraModel);\n\n        // Adjust camera so model fits nicely\n        const fitDistance =\n          maxDim / (2 * Math.tan((Math.PI * camera.fov) / 360));\n        camera.position.z = fitDistance * 1.5;\n        camera.lookAt(0, 0, 0);\n      },\n      () => console.log(\"Model loading...\"),\n      (error) => console.error(\"GLTF load error:\", error)\n    );\n\n    // === Animation Loop ===\n    const animate = () => {\n      requestAnimationFrame(animate);\n      if (chakraModel) chakraModel.rotation.z += 0.01;\n      controls.update();\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // === Handle Resize ===\n    const handleResize = () => {\n      const width = mount.clientWidth;\n      const height = mount.clientHeight;\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    };\n    window.addEventListener(\"resize\", handleResize);\n\n    // === Cleanup ===\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      mount.removeChild(renderer.domElement);\n      renderer.dispose();\n    };\n  }, []);\n\n  return (\n    <div\n      ref={mountRef}\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        position: \"relative\",\n        overflow: \"hidden\",\n      }}\n    />\n  );\n};\n\nexport default ThreeScene;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}