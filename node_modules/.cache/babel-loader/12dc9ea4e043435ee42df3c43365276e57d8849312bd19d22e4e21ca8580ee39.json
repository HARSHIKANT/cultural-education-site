{"ast":null,"code":"var _jsxFileName = \"/Users/harshikantdubey/Desktop/cultural education site/src/components/ThreeScene.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeScene = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const cameraRef = useRef(null);\n  const animationIdRef = useRef(null);\n  const culturalObjectsRef = useRef([]);\n  const mouseRef = useRef({\n    x: 0,\n    y: 0,\n    targetX: 0,\n    targetY: 0\n  });\n  useEffect(() => {\n    if (!canvasRef.current) return;\n\n    // Initialize Three.js scene\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x87CEEB);\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 5, 10);\n    cameraRef.current = camera;\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvasRef.current,\n      antialias: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    rendererRef.current = renderer;\n\n    // Add lighting\n    setupLighting(scene);\n\n    // Create 3D cultural objects\n    create3DRangoli(scene);\n    create3DLotus(scene);\n    create3DChakra(scene);\n    createFloatingParticles(scene);\n\n    // Add mouse interaction\n    setupMouseInteraction();\n\n    // Animation loop\n    const animate = () => {\n      animationIdRef.current = requestAnimationFrame(animate);\n\n      // Smooth mouse movement\n      mouseRef.current.x += (mouseRef.current.targetX - mouseRef.current.x) * 0.1;\n      mouseRef.current.y += (mouseRef.current.targetY - mouseRef.current.y) * 0.1;\n\n      // Rotate cultural objects\n      culturalObjectsRef.current.forEach((obj, index) => {\n        if (obj.rotation) {\n          obj.rotation.y += 0.005 * (index + 1);\n          obj.rotation.x += 0.002 * (index + 1);\n        }\n\n        // Floating animation\n        if (obj.position) {\n          obj.position.y += Math.sin(Date.now() * 0.001 + index) * 0.01;\n        }\n      });\n\n      // Camera movement with mouse influence\n      const time = Date.now() * 0.0005;\n      camera.position.x = Math.cos(time) * 15 + mouseRef.current.x * 2;\n      camera.position.z = Math.sin(time) * 15 + mouseRef.current.y * 2;\n      camera.lookAt(mouseRef.current.x * 3, mouseRef.current.y * 2, 0);\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n      window.removeEventListener('resize', handleResize);\n      if (renderer) {\n        renderer.dispose();\n      }\n    };\n  }, []);\n  const setupLighting = scene => {\n    // Ambient light\n    const ambientLight = new THREE.AmbientLight(0x404040, 0.6);\n    scene.add(ambientLight);\n\n    // Directional light (sun)\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(10, 10, 5);\n    directionalLight.castShadow = true;\n    directionalLight.shadow.mapSize.width = 2048;\n    directionalLight.shadow.mapSize.height = 2048;\n    scene.add(directionalLight);\n\n    // Point light for warm glow\n    const pointLight = new THREE.PointLight(0xff6b6b, 0.8, 20);\n    pointLight.position.set(0, 5, 0);\n    scene.add(pointLight);\n  };\n  const createFloatingParticles = scene => {\n    const particleCount = 50;\n    const particles = new THREE.BufferGeometry();\n    const positions = new Float32Array(particleCount * 3);\n    const colors = new Float32Array(particleCount * 3);\n    for (let i = 0; i < particleCount; i++) {\n      positions[i * 3] = (Math.random() - 0.5) * 30;\n      positions[i * 3 + 1] = Math.random() * 15;\n      positions[i * 3 + 2] = (Math.random() - 0.5) * 30;\n      const color = new THREE.Color();\n      color.setHSL(Math.random() * 0.1 + 0.1, 0.7, 0.6);\n      colors[i * 3] = color.r;\n      colors[i * 3 + 1] = color.g;\n      colors[i * 3 + 2] = color.b;\n    }\n    particles.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n    particles.setAttribute('color', new THREE.BufferAttribute(colors, 3));\n    const particleMaterial = new THREE.PointsMaterial({\n      size: 0.1,\n      vertexColors: true,\n      transparent: true,\n      opacity: 0.6\n    });\n    const particleSystem = new THREE.Points(particles, particleMaterial);\n    scene.add(particleSystem);\n    culturalObjectsRef.current.push(particleSystem);\n  };\n  const create3DRangoli = scene => {\n    const group = new THREE.Group();\n\n    // Base circular platform\n    const baseGeometry = new THREE.CylinderGeometry(4, 4, 0.1, 32);\n    const baseMaterial = new THREE.MeshPhongMaterial({\n      color: 0xf5f5dc,\n      shininess: 20\n    });\n    const base = new THREE.Mesh(baseGeometry, baseMaterial);\n    base.position.y = 0.05;\n    base.castShadow = true;\n    group.add(base);\n\n    // Outer decorative border\n    for (let i = 0; i < 32; i++) {\n      const angle = i * Math.PI * 2 / 32;\n      const radius = 3.5;\n      const borderGeometry = new THREE.ConeGeometry(0.15, 0.4, 6);\n      const borderMaterial = new THREE.MeshPhongMaterial({\n        color: 0xff6b6b,\n        shininess: 80\n      });\n      const borderElement = new THREE.Mesh(borderGeometry, borderMaterial);\n      borderElement.position.x = Math.cos(angle) * radius;\n      borderElement.position.z = Math.sin(angle) * radius;\n      borderElement.position.y = 0.2;\n      borderElement.rotation.y = angle;\n      borderElement.castShadow = true;\n      group.add(borderElement);\n    }\n\n    // First ring - Large petals\n    for (let i = 0; i < 16; i++) {\n      const angle = i * Math.PI * 2 / 16;\n      const radius = 2.8;\n      const petalGroup = new THREE.Group();\n      const petalGeometry = new THREE.ConeGeometry(0.6, 1.2, 8);\n      const petalMaterial = new THREE.MeshPhongMaterial({\n        color: 0x4ecdc4,\n        shininess: 90\n      });\n      const petal = new THREE.Mesh(petalGeometry, petalMaterial);\n      petal.position.y = 0.6;\n      petal.castShadow = true;\n      petalGroup.add(petal);\n      petalGroup.position.x = Math.cos(angle) * radius;\n      petalGroup.position.z = Math.sin(angle) * radius;\n      petalGroup.rotation.y = angle;\n      petalGroup.rotation.x = Math.PI / 12;\n      group.add(petalGroup);\n    }\n    group.position.set(-6, 0, 0);\n    group.scale.set(1.5, 1.5, 1.5);\n    scene.add(group);\n    culturalObjectsRef.current.push(group);\n  };\n  const create3DLotus = scene => {\n    const group = new THREE.Group();\n\n    // Water base\n    const waterGeometry = new THREE.CylinderGeometry(4, 4, 0.2, 32);\n    const waterMaterial = new THREE.MeshPhongMaterial({\n      color: 0x87ceeb,\n      shininess: 100,\n      transparent: true,\n      opacity: 0.8\n    });\n    const water = new THREE.Mesh(waterGeometry, waterMaterial);\n    water.position.y = 0.1;\n    group.add(water);\n\n    // Lotus stem\n    const stemGeometry = new THREE.CylinderGeometry(0.1, 0.15, 2, 8);\n    const stemMaterial = new THREE.MeshPhongMaterial({\n      color: 0x228B22,\n      shininess: 40\n    });\n    const stem = new THREE.Mesh(stemGeometry, stemMaterial);\n    stem.position.y = 1;\n    stem.castShadow = true;\n    group.add(stem);\n\n    // Outer layer - Large petals\n    for (let i = 0; i < 16; i++) {\n      const angle = i * Math.PI * 2 / 16;\n      const radius = 2.5;\n      const petalGeometry = new THREE.ConeGeometry(0.7, 1.5, 12);\n      const petalMaterial = new THREE.MeshPhongMaterial({\n        color: 0xff69b4,\n        shininess: 95,\n        transparent: true,\n        opacity: 0.9\n      });\n      const petal = new THREE.Mesh(petalGeometry, petalMaterial);\n      petal.position.x = Math.cos(angle) * radius;\n      petal.position.z = Math.sin(angle) * radius;\n      petal.position.y = 0.75;\n      petal.rotation.y = angle;\n      petal.rotation.x = Math.PI / 10;\n      petal.castShadow = true;\n      group.add(petal);\n    }\n    group.position.set(6, 0, 0);\n    group.scale.set(1.6, 1.6, 1.6);\n    scene.add(group);\n    culturalObjectsRef.current.push(group);\n  };\n  const create3DChakra = scene => {\n    const group = new THREE.Group();\n    const navyBlue = 0x001F3F;\n    const lightBlue = 0x004080;\n\n    // Main wheel rim\n    const rimOuterGeometry = new THREE.CylinderGeometry(2.0, 2.0, 0.05, 64);\n    const rimMaterial = new THREE.MeshPhongMaterial({\n      color: navyBlue,\n      shininess: 30\n    });\n    const outerRim = new THREE.Mesh(rimOuterGeometry, rimMaterial);\n    outerRim.position.y = 0;\n    group.add(outerRim);\n\n    // 24 spokes\n    for (let i = 0; i < 24; i++) {\n      const angle = i * Math.PI * 2 / 24;\n      const spokeGeometry = new THREE.BoxGeometry(0.08, 0.06, 1.3);\n      const spokeMaterial = new THREE.MeshPhongMaterial({\n        color: navyBlue,\n        shininess: 20\n      });\n      const spoke = new THREE.Mesh(spokeGeometry, spokeMaterial);\n      spoke.position.x = Math.cos(angle) * 0.65;\n      spoke.position.z = Math.sin(angle) * 0.65;\n      spoke.position.y = 0.01;\n      spoke.rotation.y = angle;\n      group.add(spoke);\n    }\n\n    // Center hub\n    const centerHubGeometry = new THREE.CylinderGeometry(0.35, 0.35, 0.08, 32);\n    const centerHubMaterial = new THREE.MeshPhongMaterial({\n      color: navyBlue,\n      shininess: 50\n    });\n    const centerHub = new THREE.Mesh(centerHubGeometry, centerHubMaterial);\n    centerHub.position.y = 0.02;\n    group.add(centerHub);\n\n    // Add rotation animation\n    const animateChakra = () => {\n      group.rotation.y += 0.005;\n      requestAnimationFrame(animateChakra);\n    };\n    animateChakra();\n    group.position.set(0, 0, -6);\n    scene.add(group);\n    culturalObjectsRef.current.push(group);\n  };\n  const setupMouseInteraction = () => {\n    const handleMouseMove = event => {\n      mouseRef.current.targetX = event.clientX / window.innerWidth * 2 - 1;\n      mouseRef.current.targetY = -(event.clientY / window.innerHeight) * 2 + 1;\n    };\n    const handleTouchMove = event => {\n      event.preventDefault();\n      const touch = event.touches[0];\n      mouseRef.current.targetX = touch.clientX / window.innerWidth * 2 - 1;\n      mouseRef.current.targetY = -(touch.clientY / window.innerHeight) * 2 + 1;\n    };\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('touchmove', handleTouchMove, {\n      passive: false\n    });\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('touchmove', handleTouchMove);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    id: \"three-canvas\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 10\n  }, this);\n};\n_s(ThreeScene, \"UXAthA1K+Lfhed5W2qKPCKfPmR0=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","ThreeScene","_s","canvasRef","sceneRef","rendererRef","cameraRef","animationIdRef","culturalObjectsRef","mouseRef","x","y","targetX","targetY","current","scene","Scene","background","Color","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","set","renderer","WebGLRenderer","canvas","antialias","setSize","shadowMap","enabled","type","PCFSoftShadowMap","setupLighting","create3DRangoli","create3DLotus","create3DChakra","createFloatingParticles","setupMouseInteraction","animate","requestAnimationFrame","forEach","obj","index","rotation","Math","sin","Date","now","time","cos","z","lookAt","render","handleResize","aspect","updateProjectionMatrix","addEventListener","cancelAnimationFrame","removeEventListener","dispose","ambientLight","AmbientLight","add","directionalLight","DirectionalLight","castShadow","shadow","mapSize","width","height","pointLight","PointLight","particleCount","particles","BufferGeometry","positions","Float32Array","colors","i","random","color","setHSL","r","g","b","setAttribute","BufferAttribute","particleMaterial","PointsMaterial","size","vertexColors","transparent","opacity","particleSystem","Points","push","group","Group","baseGeometry","CylinderGeometry","baseMaterial","MeshPhongMaterial","shininess","base","Mesh","angle","PI","radius","borderGeometry","ConeGeometry","borderMaterial","borderElement","petalGroup","petalGeometry","petalMaterial","petal","scale","waterGeometry","waterMaterial","water","stemGeometry","stemMaterial","stem","navyBlue","lightBlue","rimOuterGeometry","rimMaterial","outerRim","spokeGeometry","BoxGeometry","spokeMaterial","spoke","centerHubGeometry","centerHubMaterial","centerHub","animateChakra","handleMouseMove","event","clientX","clientY","handleTouchMove","preventDefault","touch","touches","passive","ref","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harshikantdubey/Desktop/cultural education site/src/components/ThreeScene.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nconst ThreeScene = () => {\n  const canvasRef = useRef(null);\n  const sceneRef = useRef(null);\n  const rendererRef = useRef(null);\n  const cameraRef = useRef(null);\n  const animationIdRef = useRef(null);\n  const culturalObjectsRef = useRef([]);\n  const mouseRef = useRef({ x: 0, y: 0, targetX: 0, targetY: 0 });\n\n  useEffect(() => {\n    if (!canvasRef.current) return;\n\n    // Initialize Three.js scene\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0x87CEEB);\n    sceneRef.current = scene;\n\n    // Camera setup\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.set(0, 5, 10);\n    cameraRef.current = camera;\n\n    // Renderer setup\n    const renderer = new THREE.WebGLRenderer({ \n      canvas: canvasRef.current, \n      antialias: true \n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.shadowMap.enabled = true;\n    renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n    rendererRef.current = renderer;\n\n    // Add lighting\n    setupLighting(scene);\n\n    // Create 3D cultural objects\n    create3DRangoli(scene);\n    create3DLotus(scene);\n    create3DChakra(scene);\n    createFloatingParticles(scene);\n\n    // Add mouse interaction\n    setupMouseInteraction();\n\n    // Animation loop\n    const animate = () => {\n      animationIdRef.current = requestAnimationFrame(animate);\n      \n      // Smooth mouse movement\n      mouseRef.current.x += (mouseRef.current.targetX - mouseRef.current.x) * 0.1;\n      mouseRef.current.y += (mouseRef.current.targetY - mouseRef.current.y) * 0.1;\n      \n      // Rotate cultural objects\n      culturalObjectsRef.current.forEach((obj, index) => {\n        if (obj.rotation) {\n          obj.rotation.y += 0.005 * (index + 1);\n          obj.rotation.x += 0.002 * (index + 1);\n        }\n        \n        // Floating animation\n        if (obj.position) {\n          obj.position.y += Math.sin(Date.now() * 0.001 + index) * 0.01;\n        }\n      });\n      \n      // Camera movement with mouse influence\n      const time = Date.now() * 0.0005;\n      camera.position.x = Math.cos(time) * 15 + mouseRef.current.x * 2;\n      camera.position.z = Math.sin(time) * 15 + mouseRef.current.y * 2;\n      camera.lookAt(mouseRef.current.x * 3, mouseRef.current.y * 2, 0);\n      \n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup\n    return () => {\n      if (animationIdRef.current) {\n        cancelAnimationFrame(animationIdRef.current);\n      }\n      window.removeEventListener('resize', handleResize);\n      if (renderer) {\n        renderer.dispose();\n      }\n    };\n  }, []);\n\n  const setupLighting = (scene) => {\n    // Ambient light\n    const ambientLight = new THREE.AmbientLight(0x404040, 0.6);\n    scene.add(ambientLight);\n    \n    // Directional light (sun)\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(10, 10, 5);\n    directionalLight.castShadow = true;\n    directionalLight.shadow.mapSize.width = 2048;\n    directionalLight.shadow.mapSize.height = 2048;\n    scene.add(directionalLight);\n    \n    // Point light for warm glow\n    const pointLight = new THREE.PointLight(0xff6b6b, 0.8, 20);\n    pointLight.position.set(0, 5, 0);\n    scene.add(pointLight);\n  };\n\n  const createFloatingParticles = (scene) => {\n    const particleCount = 50;\n    const particles = new THREE.BufferGeometry();\n    const positions = new Float32Array(particleCount * 3);\n    const colors = new Float32Array(particleCount * 3);\n    \n    for (let i = 0; i < particleCount; i++) {\n      positions[i * 3] = (Math.random() - 0.5) * 30;\n      positions[i * 3 + 1] = Math.random() * 15;\n      positions[i * 3 + 2] = (Math.random() - 0.5) * 30;\n      \n      const color = new THREE.Color();\n      color.setHSL(Math.random() * 0.1 + 0.1, 0.7, 0.6);\n      colors[i * 3] = color.r;\n      colors[i * 3 + 1] = color.g;\n      colors[i * 3 + 2] = color.b;\n    }\n    \n    particles.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n    particles.setAttribute('color', new THREE.BufferAttribute(colors, 3));\n    \n    const particleMaterial = new THREE.PointsMaterial({\n      size: 0.1,\n      vertexColors: true,\n      transparent: true,\n      opacity: 0.6\n    });\n    \n    const particleSystem = new THREE.Points(particles, particleMaterial);\n    scene.add(particleSystem);\n    culturalObjectsRef.current.push(particleSystem);\n  };\n\n  const create3DRangoli = (scene) => {\n    const group = new THREE.Group();\n    \n    // Base circular platform\n    const baseGeometry = new THREE.CylinderGeometry(4, 4, 0.1, 32);\n    const baseMaterial = new THREE.MeshPhongMaterial({ \n      color: 0xf5f5dc,\n      shininess: 20\n    });\n    const base = new THREE.Mesh(baseGeometry, baseMaterial);\n    base.position.y = 0.05;\n    base.castShadow = true;\n    group.add(base);\n    \n    // Outer decorative border\n    for (let i = 0; i < 32; i++) {\n      const angle = (i * Math.PI * 2) / 32;\n      const radius = 3.5;\n      \n      const borderGeometry = new THREE.ConeGeometry(0.15, 0.4, 6);\n      const borderMaterial = new THREE.MeshPhongMaterial({ \n        color: 0xff6b6b,\n        shininess: 80\n      });\n      const borderElement = new THREE.Mesh(borderGeometry, borderMaterial);\n      \n      borderElement.position.x = Math.cos(angle) * radius;\n      borderElement.position.z = Math.sin(angle) * radius;\n      borderElement.position.y = 0.2;\n      borderElement.rotation.y = angle;\n      borderElement.castShadow = true;\n      group.add(borderElement);\n    }\n    \n    // First ring - Large petals\n    for (let i = 0; i < 16; i++) {\n      const angle = (i * Math.PI * 2) / 16;\n      const radius = 2.8;\n      \n      const petalGroup = new THREE.Group();\n      \n      const petalGeometry = new THREE.ConeGeometry(0.6, 1.2, 8);\n      const petalMaterial = new THREE.MeshPhongMaterial({ \n        color: 0x4ecdc4,\n        shininess: 90\n      });\n      const petal = new THREE.Mesh(petalGeometry, petalMaterial);\n      petal.position.y = 0.6;\n      petal.castShadow = true;\n      petalGroup.add(petal);\n      \n      petalGroup.position.x = Math.cos(angle) * radius;\n      petalGroup.position.z = Math.sin(angle) * radius;\n      petalGroup.rotation.y = angle;\n      petalGroup.rotation.x = Math.PI / 12;\n      group.add(petalGroup);\n    }\n    \n    group.position.set(-6, 0, 0);\n    group.scale.set(1.5, 1.5, 1.5);\n    scene.add(group);\n    culturalObjectsRef.current.push(group);\n  };\n\n  const create3DLotus = (scene) => {\n    const group = new THREE.Group();\n    \n    // Water base\n    const waterGeometry = new THREE.CylinderGeometry(4, 4, 0.2, 32);\n    const waterMaterial = new THREE.MeshPhongMaterial({ \n      color: 0x87ceeb,\n      shininess: 100,\n      transparent: true,\n      opacity: 0.8\n    });\n    const water = new THREE.Mesh(waterGeometry, waterMaterial);\n    water.position.y = 0.1;\n    group.add(water);\n    \n    // Lotus stem\n    const stemGeometry = new THREE.CylinderGeometry(0.1, 0.15, 2, 8);\n    const stemMaterial = new THREE.MeshPhongMaterial({ \n      color: 0x228B22,\n      shininess: 40\n    });\n    const stem = new THREE.Mesh(stemGeometry, stemMaterial);\n    stem.position.y = 1;\n    stem.castShadow = true;\n    group.add(stem);\n    \n    // Outer layer - Large petals\n    for (let i = 0; i < 16; i++) {\n      const angle = (i * Math.PI * 2) / 16;\n      const radius = 2.5;\n      \n      const petalGeometry = new THREE.ConeGeometry(0.7, 1.5, 12);\n      const petalMaterial = new THREE.MeshPhongMaterial({ \n        color: 0xff69b4,\n        shininess: 95,\n        transparent: true,\n        opacity: 0.9\n      });\n      const petal = new THREE.Mesh(petalGeometry, petalMaterial);\n      \n      petal.position.x = Math.cos(angle) * radius;\n      petal.position.z = Math.sin(angle) * radius;\n      petal.position.y = 0.75;\n      petal.rotation.y = angle;\n      petal.rotation.x = Math.PI / 10;\n      petal.castShadow = true;\n      group.add(petal);\n    }\n    \n    group.position.set(6, 0, 0);\n    group.scale.set(1.6, 1.6, 1.6);\n    scene.add(group);\n    culturalObjectsRef.current.push(group);\n  };\n\n  const create3DChakra = (scene) => {\n    const group = new THREE.Group();\n    const navyBlue = 0x001F3F;\n    const lightBlue = 0x004080;\n\n    // Main wheel rim\n    const rimOuterGeometry = new THREE.CylinderGeometry(2.0, 2.0, 0.05, 64);\n    const rimMaterial = new THREE.MeshPhongMaterial({ \n      color: navyBlue,\n      shininess: 30\n    });\n    \n    const outerRim = new THREE.Mesh(rimOuterGeometry, rimMaterial);\n    outerRim.position.y = 0;\n    group.add(outerRim);\n\n    // 24 spokes\n    for (let i = 0; i < 24; i++) {\n      const angle = (i * Math.PI * 2) / 24;\n      \n      const spokeGeometry = new THREE.BoxGeometry(0.08, 0.06, 1.3);\n      const spokeMaterial = new THREE.MeshPhongMaterial({ \n        color: navyBlue,\n        shininess: 20\n      });\n      const spoke = new THREE.Mesh(spokeGeometry, spokeMaterial);\n      \n      spoke.position.x = Math.cos(angle) * 0.65;\n      spoke.position.z = Math.sin(angle) * 0.65;\n      spoke.position.y = 0.01;\n      spoke.rotation.y = angle;\n      \n      group.add(spoke);\n    }\n\n    // Center hub\n    const centerHubGeometry = new THREE.CylinderGeometry(0.35, 0.35, 0.08, 32);\n    const centerHubMaterial = new THREE.MeshPhongMaterial({ \n      color: navyBlue,\n      shininess: 50\n    });\n    const centerHub = new THREE.Mesh(centerHubGeometry, centerHubMaterial);\n    centerHub.position.y = 0.02;\n    group.add(centerHub);\n\n    // Add rotation animation\n    const animateChakra = () => {\n      group.rotation.y += 0.005;\n      requestAnimationFrame(animateChakra);\n    };\n    animateChakra();\n\n    group.position.set(0, 0, -6);\n    scene.add(group);\n    culturalObjectsRef.current.push(group);\n  };\n\n  const setupMouseInteraction = () => {\n    const handleMouseMove = (event) => {\n      mouseRef.current.targetX = (event.clientX / window.innerWidth) * 2 - 1;\n      mouseRef.current.targetY = -(event.clientY / window.innerHeight) * 2 + 1;\n    };\n\n    const handleTouchMove = (event) => {\n      event.preventDefault();\n      const touch = event.touches[0];\n      mouseRef.current.targetX = (touch.clientX / window.innerWidth) * 2 - 1;\n      mouseRef.current.targetY = -(touch.clientY / window.innerHeight) * 2 + 1;\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('touchmove', handleTouchMove, { passive: false });\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('touchmove', handleTouchMove);\n    };\n  };\n\n  return <canvas ref={canvasRef} id=\"three-canvas\" />;\n};\n\nexport default ThreeScene;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}