{"ast":null,"code":"var _jsxFileName = \"/Users/harshikantdubey/Desktop/cultural education site/src/components/ThreeScene.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeScene = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    console.log('ThreeScene: Initializing...');\n\n    // Create Scene\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf5f5f5);\n\n    // Get container dimensions\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n    console.log('ThreeScene: Container dimensions:', {\n      width,\n      height\n    });\n\n    // Create Camera\n    const camera = new THREE.PerspectiveCamera(75,\n    // Field of view\n    width / height,\n    // Aspect ratio\n    0.1,\n    // Near clipping plane\n    1000 // Far clipping plane\n    );\n    camera.position.set(0, 0, 5); // Position camera\n\n    // Create Renderer\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    renderer.setSize(width, height);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Add Lighting\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 5, 5);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\n    scene.add(ambientLight);\n\n    // Add hemisphere light for better illumination\n    const hemisphereLight = new THREE.HemisphereLight(0xffffbb, 0x080820, 0.5);\n    scene.add(hemisphereLight);\n\n    // Load GLTF Model\n    const loader = new GLTFLoader();\n    let model;\n    loader.load('/models/scene.gltf', gltf => {\n      model = gltf.scene;\n\n      // Calculate bounding box and center the model\n      const box = new THREE.Box3().setFromObject(model);\n      const center = box.getCenter(new THREE.Vector3());\n      const size = box.getSize(new THREE.Vector3());\n\n      // Center the model\n      model.position.sub(center);\n\n      // Scale the model to fit in the camera view\n      const maxDimension = Math.max(size.x, size.y, size.z);\n      console.log('Model dimensions:', {\n        size,\n        maxDimension\n      });\n\n      // Use a larger scale to see the model\n      const scale = 0.001; // Larger scale to see the model\n      model.scale.setScalar(scale);\n      console.log('Applied fixed scale:', scale);\n\n      // Keep model centered\n      model.position.set(0, 0, 0); // Center the model\n      scene.add(model);\n      modelRef = model; // Set reference for mouse scaling\n      console.log('Model loaded successfully!', {\n        size,\n        center,\n        scale\n      });\n\n      // Add a test cube to verify the scene is working\n      const testGeometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n      const testMaterial = new THREE.MeshBasicMaterial({\n        color: 0xff0000\n      });\n      const testCube = new THREE.Mesh(testGeometry, testMaterial);\n      testCube.position.set(1, 0, 0); // Position it to the right side\n      scene.add(testCube);\n      console.log('Added test cube for debugging');\n\n      // Position camera to see the model\n      camera.position.set(0, 0, 4);\n      camera.lookAt(0, 0, 0);\n    }, progress => {\n      console.log('Loading progress:', progress.loaded / progress.total * 100 + '%');\n    }, error => {\n      console.error('Error loading model:', error);\n      // Add a fallback cube to test if the scene is working\n      const geometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n      const material = new THREE.MeshBasicMaterial({\n        color: 0x00ff00\n      });\n      const cube = new THREE.Mesh(geometry, material);\n      scene.add(cube);\n      console.log('Added fallback cube due to model loading error');\n    });\n\n    // Trackpad gesture controls for scaling\n    let currentScale = 0.001;\n    let modelRef = null;\n    let lastTouchDistance = 0;\n\n    // Mouse tracking for tilting\n    let mouseX = 0;\n    let mouseY = 0;\n    const handleWheel = event => {\n      event.preventDefault();\n\n      // Handle trackpad pinch-to-zoom\n      if (event.ctrlKey || event.deltaY !== 0) {\n        const scaleFactor = event.deltaY > 0 ? 0.9 : 1.1; // Zoom out or in\n        currentScale *= scaleFactor;\n\n        // Limit scale range\n        currentScale = Math.max(0.0001, Math.min(0.01, currentScale));\n        if (modelRef) {\n          modelRef.scale.setScalar(currentScale);\n          console.log('Trackpad scaling to:', currentScale);\n        }\n      }\n    };\n    const handleTouchStart = event => {\n      if (event.touches.length === 2) {\n        const touch1 = event.touches[0];\n        const touch2 = event.touches[1];\n        lastTouchDistance = Math.sqrt(Math.pow(touch2.clientX - touch1.clientX, 2) + Math.pow(touch2.clientY - touch1.clientY, 2));\n      }\n    };\n    const handleTouchMove = event => {\n      if (event.touches.length === 2) {\n        event.preventDefault();\n        const touch1 = event.touches[0];\n        const touch2 = event.touches[1];\n        const currentDistance = Math.sqrt(Math.pow(touch2.clientX - touch1.clientX, 2) + Math.pow(touch2.clientY - touch1.clientY, 2));\n        if (lastTouchDistance > 0) {\n          const scaleFactor = currentDistance / lastTouchDistance;\n          currentScale *= scaleFactor;\n\n          // Limit scale range\n          currentScale = Math.max(0.0001, Math.min(0.01, currentScale));\n          if (modelRef) {\n            modelRef.scale.setScalar(currentScale);\n            console.log('Touch scaling to:', currentScale);\n          }\n        }\n        lastTouchDistance = currentDistance;\n      }\n    };\n    const handleMouseMove = event => {\n      // Get mouse position relative to the container\n      const rect = mountRef.current.getBoundingClientRect();\n      mouseX = (event.clientX - rect.left - rect.width / 2) / (rect.width / 2); // -1 to 1\n      mouseY = -(event.clientY - rect.top - rect.height / 2) / (rect.height / 2); // -1 to 1\n\n      // Apply subtle tilting based on mouse position\n      if (modelRef) {\n        const tiltX = mouseY * 0.1; // Tilt around X axis based on mouse Y\n        const tiltY = mouseX * 0.1; // Tilt around Y axis based on mouse X\n\n        modelRef.rotation.x = tiltX;\n        modelRef.rotation.y = tiltY;\n      }\n    };\n\n    // Attach trackpad, touch, and mouse events to the container div\n    if (mountRef.current) {\n      mountRef.current.addEventListener('wheel', handleWheel, {\n        passive: false\n      });\n      mountRef.current.addEventListener('touchstart', handleTouchStart, {\n        passive: true\n      });\n      mountRef.current.addEventListener('touchmove', handleTouchMove, {\n        passive: false\n      });\n      mountRef.current.addEventListener('mousemove', handleMouseMove);\n    }\n\n    // Animation Loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // No rotation - just render\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      const newWidth = mountRef.current.clientWidth;\n      const newHeight = mountRef.current.clientHeight;\n      camera.aspect = newWidth / newHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(newWidth, newHeight);\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup on component unmount\n    return () => {\n      var _mountRef$current;\n      window.removeEventListener('resize', handleResize);\n      if (mountRef.current) {\n        mountRef.current.removeEventListener('wheel', handleWheel);\n        mountRef.current.removeEventListener('touchstart', handleTouchStart);\n        mountRef.current.removeEventListener('touchmove', handleTouchMove);\n        mountRef.current.removeEventListener('mousemove', handleMouseMove);\n      }\n      (_mountRef$current = mountRef.current) === null || _mountRef$current === void 0 ? void 0 : _mountRef$current.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      width: '100%',\n      height: '100%',\n      borderRadius: '15px',\n      overflow: 'hidden'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreeScene, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeScene;\nexport default ThreeScene;\nvar _c;\n$RefreshReg$(_c, \"ThreeScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","GLTFLoader","jsxDEV","_jsxDEV","ThreeScene","_s","mountRef","console","log","scene","Scene","background","Color","width","current","clientWidth","height","clientHeight","camera","PerspectiveCamera","position","set","renderer","WebGLRenderer","antialias","setSize","setPixelRatio","window","devicePixelRatio","appendChild","domElement","directionalLight","DirectionalLight","castShadow","add","ambientLight","AmbientLight","hemisphereLight","HemisphereLight","loader","model","load","gltf","box","Box3","setFromObject","center","getCenter","Vector3","size","getSize","sub","maxDimension","Math","max","x","y","z","scale","setScalar","modelRef","testGeometry","BoxGeometry","testMaterial","MeshBasicMaterial","color","testCube","Mesh","lookAt","progress","loaded","total","error","geometry","material","cube","currentScale","lastTouchDistance","mouseX","mouseY","handleWheel","event","preventDefault","ctrlKey","deltaY","scaleFactor","min","handleTouchStart","touches","length","touch1","touch2","sqrt","pow","clientX","clientY","handleTouchMove","currentDistance","handleMouseMove","rect","getBoundingClientRect","left","top","tiltX","tiltY","rotation","addEventListener","passive","animate","requestAnimationFrame","render","handleResize","newWidth","newHeight","aspect","updateProjectionMatrix","_mountRef$current","removeEventListener","removeChild","ref","style","borderRadius","overflow","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/harshikantdubey/Desktop/cultural education site/src/components/ThreeScene.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n\nconst ThreeScene = () => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    console.log('ThreeScene: Initializing...');\n    \n    // Create Scene\n    const scene = new THREE.Scene();\n    scene.background = new THREE.Color(0xf5f5f5);\n\n    // Get container dimensions\n    const width = mountRef.current.clientWidth;\n    const height = mountRef.current.clientHeight;\n    console.log('ThreeScene: Container dimensions:', { width, height });\n\n    // Create Camera\n    const camera = new THREE.PerspectiveCamera(\n      75,           // Field of view\n      width / height, // Aspect ratio\n      0.1,          // Near clipping plane\n      1000          // Far clipping plane\n    );\n    camera.position.set(0, 0, 5); // Position camera\n\n    // Create Renderer\n    const renderer = new THREE.WebGLRenderer({ antialias: true });\n    renderer.setSize(width, height);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Add Lighting\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 5, 5);\n    directionalLight.castShadow = true;\n    scene.add(directionalLight);\n\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\n    scene.add(ambientLight);\n\n    // Add hemisphere light for better illumination\n    const hemisphereLight = new THREE.HemisphereLight(0xffffbb, 0x080820, 0.5);\n    scene.add(hemisphereLight);\n\n    // Load GLTF Model\n    const loader = new GLTFLoader();\n    let model;\n\n    loader.load(\n      '/models/scene.gltf',\n      (gltf) => {\n        model = gltf.scene;\n        \n        // Calculate bounding box and center the model\n        const box = new THREE.Box3().setFromObject(model);\n        const center = box.getCenter(new THREE.Vector3());\n        const size = box.getSize(new THREE.Vector3());\n        \n        // Center the model\n        model.position.sub(center);\n        \n        // Scale the model to fit in the camera view\n        const maxDimension = Math.max(size.x, size.y, size.z);\n        console.log('Model dimensions:', { size, maxDimension });\n        \n        // Use a larger scale to see the model\n        const scale = 0.001; // Larger scale to see the model\n        model.scale.setScalar(scale);\n        console.log('Applied fixed scale:', scale);\n        \n        // Keep model centered\n        model.position.set(0, 0, 0); // Center the model\n        scene.add(model);\n        modelRef = model; // Set reference for mouse scaling\n        console.log('Model loaded successfully!', { size, center, scale });\n        \n        // Add a test cube to verify the scene is working\n        const testGeometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n        const testMaterial = new THREE.MeshBasicMaterial({ color: 0xff0000 });\n        const testCube = new THREE.Mesh(testGeometry, testMaterial);\n        testCube.position.set(1, 0, 0); // Position it to the right side\n        scene.add(testCube);\n        console.log('Added test cube for debugging');\n        \n        // Position camera to see the model\n        camera.position.set(0, 0, 4);\n        camera.lookAt(0, 0, 0);\n      },\n      (progress) => {\n        console.log('Loading progress:', (progress.loaded / progress.total) * 100 + '%');\n      },\n      (error) => {\n        console.error('Error loading model:', error);\n        // Add a fallback cube to test if the scene is working\n        const geometry = new THREE.BoxGeometry(0.5, 0.5, 0.5);\n        const material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n        const cube = new THREE.Mesh(geometry, material);\n        scene.add(cube);\n        console.log('Added fallback cube due to model loading error');\n      }\n    );\n\n    // Trackpad gesture controls for scaling\n    let currentScale = 0.001;\n    let modelRef = null;\n    let lastTouchDistance = 0;\n    \n    // Mouse tracking for tilting\n    let mouseX = 0;\n    let mouseY = 0;\n\n    const handleWheel = (event) => {\n      event.preventDefault();\n      \n      // Handle trackpad pinch-to-zoom\n      if (event.ctrlKey || event.deltaY !== 0) {\n        const scaleFactor = event.deltaY > 0 ? 0.9 : 1.1; // Zoom out or in\n        currentScale *= scaleFactor;\n        \n        // Limit scale range\n        currentScale = Math.max(0.0001, Math.min(0.01, currentScale));\n        \n        if (modelRef) {\n          modelRef.scale.setScalar(currentScale);\n          console.log('Trackpad scaling to:', currentScale);\n        }\n      }\n    };\n\n    const handleTouchStart = (event) => {\n      if (event.touches.length === 2) {\n        const touch1 = event.touches[0];\n        const touch2 = event.touches[1];\n        lastTouchDistance = Math.sqrt(\n          Math.pow(touch2.clientX - touch1.clientX, 2) +\n          Math.pow(touch2.clientY - touch1.clientY, 2)\n        );\n      }\n    };\n\n    const handleTouchMove = (event) => {\n      if (event.touches.length === 2) {\n        event.preventDefault();\n        const touch1 = event.touches[0];\n        const touch2 = event.touches[1];\n        const currentDistance = Math.sqrt(\n          Math.pow(touch2.clientX - touch1.clientX, 2) +\n          Math.pow(touch2.clientY - touch1.clientY, 2)\n        );\n        \n        if (lastTouchDistance > 0) {\n          const scaleFactor = currentDistance / lastTouchDistance;\n          currentScale *= scaleFactor;\n          \n          // Limit scale range\n          currentScale = Math.max(0.0001, Math.min(0.01, currentScale));\n          \n          if (modelRef) {\n            modelRef.scale.setScalar(currentScale);\n            console.log('Touch scaling to:', currentScale);\n          }\n        }\n        \n        lastTouchDistance = currentDistance;\n      }\n    };\n\n    const handleMouseMove = (event) => {\n      // Get mouse position relative to the container\n      const rect = mountRef.current.getBoundingClientRect();\n      mouseX = (event.clientX - rect.left - rect.width / 2) / (rect.width / 2); // -1 to 1\n      mouseY = -(event.clientY - rect.top - rect.height / 2) / (rect.height / 2); // -1 to 1\n      \n      // Apply subtle tilting based on mouse position\n      if (modelRef) {\n        const tiltX = mouseY * 0.1; // Tilt around X axis based on mouse Y\n        const tiltY = mouseX * 0.1; // Tilt around Y axis based on mouse X\n        \n        modelRef.rotation.x = tiltX;\n        modelRef.rotation.y = tiltY;\n      }\n    };\n\n    // Attach trackpad, touch, and mouse events to the container div\n    if (mountRef.current) {\n      mountRef.current.addEventListener('wheel', handleWheel, { passive: false });\n      mountRef.current.addEventListener('touchstart', handleTouchStart, { passive: true });\n      mountRef.current.addEventListener('touchmove', handleTouchMove, { passive: false });\n      mountRef.current.addEventListener('mousemove', handleMouseMove);\n    }\n\n    // Animation Loop\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      // No rotation - just render\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Handle window resize\n    const handleResize = () => {\n      const newWidth = mountRef.current.clientWidth;\n      const newHeight = mountRef.current.clientHeight;\n\n      camera.aspect = newWidth / newHeight;\n      camera.updateProjectionMatrix();\n\n      renderer.setSize(newWidth, newHeight);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Cleanup on component unmount\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (mountRef.current) {\n        mountRef.current.removeEventListener('wheel', handleWheel);\n        mountRef.current.removeEventListener('touchstart', handleTouchStart);\n        mountRef.current.removeEventListener('touchmove', handleTouchMove);\n        mountRef.current.removeEventListener('mousemove', handleMouseMove);\n      }\n      mountRef.current?.removeChild(renderer.domElement);\n    };\n  }, []);\n\n  return (\n    <div\n      ref={mountRef}\n      style={{\n        width: '100%',\n        height: '100%',\n        borderRadius: '15px',\n        overflow: 'hidden',\n      }}\n    />\n  );\n};\n\nexport default ThreeScene;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}